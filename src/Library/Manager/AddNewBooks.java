/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Library.Manager;

import com.mongodb.BasicDBList;
import com.mongodb.BasicDBObject;
import com.mongodb.Cursor;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import org.bson.BSONObject;

/**
 *
 * @author Siyam
 */
public class AddNewBooks extends javax.swing.JFrame {

    /**
     * Creates new form AddNewBooks
     */
    DB db;
    MongoClient mongoClient;
    DBCollection users;
    DBObject dBObject;

    public AddNewBooks() {

        initComponents();
        mongoClient = new MongoClient("localhost", 27017);      //MongoDb normally open in this port
        db = mongoClient.getDB("Library_Manager");             //Db Name = ""
        users = db.getCollection("users");
        System.out.println("db connection ok");
        this.setTitle("Add New Book");
        textFieldsUnEditable();
        //buttonDelete.setVisible(false);
        buttonSave.setVisible(true);
        //textFieldSearch.setToolTipText("search by Book name");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        textFieldBookName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textFieldAuthor = new javax.swing.JTextField();
        textFieldYear = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDescription = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        buttonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Book Name ");

        textFieldBookName.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        textFieldBookName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldBookNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Author");

        jLabel4.setText("Genre");

        jLabel5.setText("Year");

        textFieldAuthor.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        textFieldAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldAuthorActionPerformed(evt);
            }
        });

        textFieldYear.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N

        buttonSave.setText("SAVE");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        jLabel8.setText("Description");

        textAreaDescription.setColumns(20);
        textAreaDescription.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        textAreaDescription.setRows(5);
        textAreaDescription.setAutoscrolls(false);
        jScrollPane1.setViewportView(textAreaDescription);

        jLabel6.setText("Availability");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Available", "Lend" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Science Fiction", "Drama", "Adventure", "Romance", "Mystery", "Horror", "Poetry", "Biography" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(textFieldAuthor)
                        .addComponent(textFieldYear)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(67, 67, 67)
                            .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(textFieldBookName)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textFieldYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonSave)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("LIBRARY MANAGER");

        buttonBack.setText("BACK");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 272, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldBookNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldBookNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldBookNameActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
        

        //if (buttonUpdate.getText().equals("SAVE")) {

            if (validateUserInput()) {

                //String author = textFieldAuthor.getText().trim();
                String bookName = textFieldBookName.getText().trim();
                dBObject = new BasicDBObject();
                BasicDBObject whereQuery = new BasicDBObject();
                whereQuery.put("BookName", bookName);
                dBObject = users.findOne(whereQuery);
                if (dBObject != null) {
                    JOptionPane.showMessageDialog(this, "This Book is already added to database", "ERROR!", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    BasicDBObject doc = new BasicDBObject("BookName", textFieldBookName.getText().toUpperCase()).
                            append("Author", textFieldAuthor.getText()).
                            //append("Genre", textFieldGenre.getText()).
                            append("Genre", jComboBox2.getSelectedItem().toString()).
                            append("Year", Integer.parseInt(textFieldYear.getText())).
                            append("Availability", jComboBox1.getSelectedItem().toString()).
                            //append("currentWorkPlace", textFieldCurrentWrokPlace.getText()).
                            append("Description", textAreaDescription.getText());

                    users.insert(doc);
                    System.out.println("Document inserted successfully");
                    String[] ses = new String[6];
                    setTextFieldData(ses);
                }

            }
            
        //}
//        else if (buttonUpdate.getText().equals("UPDATE")) {
//            textFieldsEditable();
//            buttonUpdate.setText("COMMIT");
//           // buttonDelete.setVisible(false);
//          }
//        else if (buttonUpdate.getText().equals("COMMIT")) {
//
//            if (validateUserInput()) {
//                
//                dBObject.put("BookName", textFieldBookName.getText());
//                dBObject.put("Genre", textFieldGenre.getText());
//                dBObject.put("Year", Integer.parseInt(textFieldYear.getText()));
//                //dBObject.put("currentWorkPlace", textFieldCurrentWrokPlace.getText());
//                dBObject.put("Description", textAreaDescription.getText());
//                users.save(dBObject);
//                textFieldsUnEditable();
//                textFieldSearch.setText(textFieldAuthor.getText());
//                buttonUpdate.setVisible(false);
//            }
//        }
            JOptionPane.showMessageDialog(this, "Invalid input", "ERROR!", JOptionPane.ERROR_MESSAGE);


    }//GEN-LAST:event_buttonSaveActionPerformed

    private void textFieldAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldAuthorActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_textFieldAuthorActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        //jPanel1.setVisible(false);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        
        
//        AllBooks allStudents = new AllBooks();
//          allStudents.setVisible(true);
//        allStudents.setResizable(false);
//        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
//        int x = (int) ((dim.getWidth() - allStudents.getWidth()) / 2);
//        int y = 100;
//        allStudents.setLocation(x, y);
        
    }//GEN-LAST:event_buttonBackActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaDescription;
    private javax.swing.JTextField textFieldAuthor;
    private javax.swing.JTextField textFieldBookName;
    private javax.swing.JTextField textFieldYear;
    // End of variables declaration//GEN-END:variables

    void setTextFieldData(String[] array) {

        textFieldBookName.setText(array[0]);
        textFieldAuthor.setText(array[1]);
        textFieldYear.setText(array[2]);
        textFieldYear.setText(array[3]);
        //textFieldCurrentWrokPlace.setText(array[4]);
        textAreaDescription.setText(array[5]);
    }

    private boolean validateUserInput() {
        if (textFieldBookName.getText().isEmpty() || textFieldAuthor.getText().isEmpty() || textFieldYear.getText().isEmpty()
                || jComboBox1.getSelectedItem().toString().isEmpty() || jComboBox2.getSelectedItem().toString().isEmpty() /*|| textFieldCurrentWrokPlace.getText().isEmpty()*/) {
            JOptionPane.showMessageDialog(this, "Invalid Input");
            return false;
        }

        return true;
    }

    void textFieldsEditable() {

        textFieldBookName.setEditable(true);
        textFieldYear.setEditable(true);
        textFieldYear.setEditable(true);
        //textFieldCurrentWrokPlace.setEditable(true);
        textAreaDescription.setEditable(true);

    }

    void textFieldsUnEditable() {

//        textFieldBookName.setEditable(false);
//        textFieldAuthor.setEditable(false);
//        textFieldGenre.setEditable(false);
//        textFieldYear.setEditable(false);
//        //textFieldCurrentWrokPlace.setEditable(false);
//        textAreaDescription.setEditable(false);

    }

}
